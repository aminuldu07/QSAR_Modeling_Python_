1. Calculate molecular descriptors using "inchi string" 

#  unique_INCHIKEY: Initial processing of the csv file ("merged_on_Approval_ID.csv") for getting unique INCHIKEY/SMILES.
    Deleting duplicate INCHIKEY from the "merged_on_Approval_ID.csv" to get  unique_INCHIKEY. 

# verification of unique_INCHIKEY: Checking the effectiveness of deleting duplicate INCHIKEY by agian deleting the duplicate SMILES values and
    checking the differnce between these two files (two files should be identical). unique_smiles

# df = ['SMILES1', 'SMILES', 'INCHIKEY']:  Generating files containing SMILES from "U_SMILES.csv" and SMILES and INCHIKEY from 
    the "unique_inchikeys.csv". "SMILES = SMILES1". # Select the desired columns- result_df = merged_df[['SMILES1', 'SMILES', 'INCHIKEY']]

# Convert the INCHIKEY to "inchi string" using "pubchempy" package

# Calculate the descriptors using "inchi string" using "rdkit" 

# Calculate the descriptors using "inchi string" using "mordred"


2. Calculate molecular descriptors using "sdf files" 

#  Create single sdf file from the master sdf file. remove the leading "$$$$" from each sdf file.

#  Using pandas & rdkit packages, match the each smile string from "U_SMILES.csv" with the each sdf
   file. The matched sdf file will be copied at new folder named "sdftosmile".

# Calculate the descriptors using "sdf file" using "rdkit"

#  Calculate the descriptors using "sdf file" using "mordred"


3. Calculate molecular descriptors using "smiles string"

# Calculate the descriptors using "smiles string" using "rdkit"

# Calculate the descriptors using "smile string" using "mordred"


